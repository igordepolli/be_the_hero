/**
 * Rota / Recurso
 */

 /**
  * Métodos HTTP:
  * 
  * GET: Buscar uma informação do back-end
  * POST: Criar uma informação no back-end
  * PUT: Alterar uma informação no back-end
  * DELETE: Deletar uma informação no back-end
  */

/**
 * Tipos de parâmetros:
 * 
 * Query: Parâmetros nomeados enviados na rota após "?" (filtros, paginação)
 *  Exemplo de passagem de valores:
 *      /users?page=2&nome=Igor&Idade=23
 * 
 * Route Params: Parâmetros utilizados para identificar recursos
 *  Exemplo:
 *     app.get('/users/:id', (request, response) => {
        return response.json({
        evento: 'Semana Oministack 11.0',
        aluno: 'Igor'
    });
}); 
    No método GET:
    /users/1

    Request Body: Corpo da requisição, utilizado para criar ou alterar recursos
 *  

    Query Builder: table('users').select('*').where()
 */


Três Parametros: Query, Route, Body


TESTES DE INTEGRAÇÃO: TESTAM O FLUXO DE UMA ROTA INTEIRA DA APLICAÇÃO, TESTA UMA FUNCIONALIDADE OU ROTA POR COMPLETO
TESTE UNITÁRIO: TESTA UM PEDAÇO DA APLICAÇÃO DE FORMA ISOLADA, TESTA UMA FUNÇÃO MUITO ISOLADA, NÃO SE COMUNICA COM OUTRAS FERRAMENTAS DO CÓDIGO.

"test": "cross-env NODE_ENV=test jest" //instala-se o "npm install cross-env" para verificar se está ou não em ambiente de teste, e modofica esta linha dessa forma.

ESTUDAR DEPOIS:
Padrões de código: ESLint, Prettier
Autenticação JWT
Styled Components
